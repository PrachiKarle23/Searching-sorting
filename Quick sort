#include <bits/stdc++.h>
int partition(vector<int>&arr,int s,int e){
    int pivot=arr[s];
    int cnt=0;
    for(int i=s+1;i<=e;i++){
       if(arr[i]<=pivot){
           cnt++;
       }
    }
    int pivotInd=s+cnt;
    swap(arr[pivotInd],arr[s]);
    int i=s, j=e;
    while(i<pivotInd && j>pivotInd){
        while(arr[i]<=pivot){
            i++;
        }
        while(arr[j]>pivot){
            j--;
        }
        if(i<pivotInd && j>pivotInd){
            swap(arr[i++], arr[j--]);
        }
    }

    return pivotInd;
} 
void Sort(vector<int>& arr,int s,int e){
    if(s>=e){
        return;
    }
    int p=partition(arr,s,e);
    Sort(arr, s, p-1);
    Sort(arr,p+1,e);
}
vector<int> quickSort(vector<int> arr)
{
    int n=arr.size();
    Sort(arr, 0, n-1);
    return arr;
}
