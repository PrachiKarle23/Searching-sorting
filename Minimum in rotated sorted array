class Solution {
public:
    int findMin(vector<int>& nums) {
        int s=0,e=nums.size()-1;

        while(s<e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]<nums[e])
            {
               e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return nums[s];
    }

};

//Duplicates rotated array
class Solution {
public:
    int findMin(vector<int>& nums) {
        int s=0,e=nums.size()-1;
        while(s<e)
        {
            int mid=s+(e-s)/2;
           if(nums[mid]==nums[s] && nums[mid]==nums[e])
           {
             s++;
             e--;
           }
           else if(nums[mid]<=nums[e])
           {
            e=mid;
           }
           else{
            s=mid+1;
           }
        }
        return nums[s];
    }
};


class Solution {
public:
    int findMin(vector<int>& nums) {
        int s=0,e=nums.size()-1;
        while(s<e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]>nums[e])
            {
                s=mid+1;
            }
            else if(nums[mid]<nums[e])
            {
                e=mid;
            }
            else{
                e--;
            }
        }
        return nums[s];
    }
};
